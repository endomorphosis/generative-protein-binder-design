# RFDiffusion ARM64 Native Dockerfile
# This builds RFDiffusion natively for ARM64/aarch64 architecture

FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    python3.10 \
    python3.10-dev \
    python3-pip \
    libhdf5-dev \
    && rm -rf /var/lib/apt/lists/*

# Set python3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Upgrade pip
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install PyTorch for ARM64
# Using CPU version for ARM64, CUDA build requires complex compilation
RUN pip install --no-cache-dir \
    torch==2.1.0 \
    torchvision \
    torchaudio \
    --index-url https://download.pytorch.org/whl/cpu

# Install RFDiffusion dependencies
RUN pip install --no-cache-dir \
    numpy \
    scipy \
    pandas \
    biopython \
    pytorch-lightning \
    hydra-core \
    pyrsistent \
    decorator \
    && rm -rf ~/.cache/pip

# Clone RFDiffusion
WORKDIR /opt
RUN git clone https://github.com/RosettaCommons/RFdiffusion.git

WORKDIR /opt/RFdiffusion

# Install RFDiffusion
RUN pip install --no-cache-dir -e . || echo "Some dependencies may have issues on ARM64"

# Download SE3 Transformer (needed for RFDiffusion)
RUN git clone https://github.com/RosettaCommons/SE3Transformer.git /opt/se3_transformer && \
    cd /opt/se3_transformer && \
    pip install --no-cache-dir -e .

# Runtime stage
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.10/dist-packages /usr/local/lib/python3.10/dist-packages
COPY --from=builder /opt/RFdiffusion /opt/RFdiffusion
COPY --from=builder /opt/se3_transformer /opt/se3_transformer

WORKDIR /opt/RFdiffusion

# Set environment variables
ENV PYTHONPATH="/opt/RFdiffusion:/opt/se3_transformer:${PYTHONPATH}"
ENV PATH="/opt/RFdiffusion:${PATH}"

# Create directories for models and outputs
RUN mkdir -p /models /outputs

# Expose port for inference server
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import torch; import rfdiffusion; print('RFDiffusion ARM64 OK')" || exit 1

# Default command
CMD ["python3", "-c", "import torch; print('RFDiffusion ARM64 ready')"]
