# ProteinMPNN ARM64 Native Dockerfile
# This builds ProteinMPNN natively for ARM64/aarch64 architecture

FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    wget \
    curl \
    python3.10 \
    python3.10-dev \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set python3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Upgrade pip
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install PyTorch for ARM64
RUN pip install --no-cache-dir \
    torch==2.1.0 \
    --index-url https://download.pytorch.org/whl/cpu

# Install ProteinMPNN dependencies
RUN pip install --no-cache-dir \
    numpy \
    biopython \
    pandas \
    && rm -rf ~/.cache/pip

# Clone ProteinMPNN repository
WORKDIR /opt
RUN git clone https://github.com/dauparas/ProteinMPNN.git

WORKDIR /opt/ProteinMPNN

# Create necessary directories
RUN mkdir -p outputs inputs

# Runtime stage
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.10/dist-packages /usr/local/lib/python3.10/dist-packages
COPY --from=builder /opt/ProteinMPNN /opt/ProteinMPNN

WORKDIR /opt/ProteinMPNN

# Set environment variables
ENV PYTHONPATH="/opt/ProteinMPNN:${PYTHONPATH}"
ENV PATH="/opt/ProteinMPNN:${PATH}"

# Create directories for models and outputs
RUN mkdir -p /models /outputs

# Expose port for inference server
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import torch; import numpy; import Bio; print('ProteinMPNN ARM64 OK')" || exit 1

# Default command
CMD ["python3", "-c", "import torch; print('ProteinMPNN ARM64 ready')"]
